{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
    "id": 24196,
    "exportedSymbols": {
      "ERC165": [
        24195
      ],
      "IERC165": [
        24207
      ]
    },
    "nodeType": "SourceUnit",
    "src": "99:888:19",
    "nodes": [
      {
        "id": 24173,
        "nodeType": "PragmaDirective",
        "src": "99:23:19",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 24174,
        "nodeType": "ImportDirective",
        "src": "124:23:19",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24196,
        "sourceUnit": 24208,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24195,
        "nodeType": "ContractDefinition",
        "src": "726:260:19",
        "nodes": [
          {
            "id": 24194,
            "nodeType": "FunctionDefinition",
            "src": "829:155:19",
            "body": {
              "id": 24193,
              "nodeType": "Block",
              "src": "920:64:19",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 24191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24186,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24180,
                      "src": "937:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 24188,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24207,
                            "src": "957:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$24207_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$24207_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 24187,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "952:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 24189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "952:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$24207",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 24190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "952:25:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "937:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 24185,
                  "id": 24192,
                  "nodeType": "Return",
                  "src": "930:47:19"
                }
              ]
            },
            "baseFunctions": [
              24206
            ],
            "documentation": {
              "id": 24178,
              "nodeType": "StructuredDocumentation",
              "src": "768:56:19",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "838:17:19",
            "overrides": {
              "id": 24182,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "896:8:19"
            },
            "parameters": {
              "id": 24181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24180,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "863:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "856:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 24179,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "855:20:19"
            },
            "returnParameters": {
              "id": 24185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "914:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24183,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "913:6:19"
            },
            "scope": 24195,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 24176,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24207,
              "src": "754:7:19"
            },
            "id": 24177,
            "nodeType": "InheritanceSpecifier",
            "src": "754:7:19"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 24175,
          "nodeType": "StructuredDocumentation",
          "src": "149:576:19",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24195,
          24207
        ],
        "name": "ERC165",
        "nameLocation": "744:6:19",
        "scope": 24196,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}